#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* left;
    Node* right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};

Node* createNode(int val) {
    return new Node(val);
}

int countNodes(Node* root) {
    if (!root)
        return 0;
    return 1 + countNodes(root->left) + countNodes(root->right);
}

int countLeaves(Node* root) {
    if (!root)
        return 0;
    if (!root->left && !root->right)
        return 1;
    return countLeaves(root->left) + countLeaves(root->right);
}

int findHeight(Node* root) {
    if (!root)
        return 0;
    int leftH = findHeight(root->left);
    int rightH = findHeight(root->right);
    return 1 + max(leftH, rightH);
}

int main() {
    Node* root = createNode(10);
    root->left = createNode(6);
    root->right = createNode(15);
    root->left->left = createNode(3);
    root->left->right = createNode(8);
    root->right->left = createNode(12);
    root->right->right = createNode(18);

    cout << "Binary Tree Properties\n";
    cout << "------------------------\n";

    cout << "Total number of nodes: " << countNodes(root) << endl;
    cout << "Number of leaf nodes: " << countLeaves(root) << endl;
    cout << "Height of the tree: " << findHeight(root) << endl;

    return 0;
}
