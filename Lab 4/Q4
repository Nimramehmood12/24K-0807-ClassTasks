#include <iostream>
using namespace std;

void bubbleSort(int arr[], int n) {
    for(int i = 0; i < n-1; i++) {
        for(int j = 0; j < n-i-1; j++) {
            if(arr[j] > arr[j+1]) {
                swap(arr[j], arr[j+1]);
            }
        }
    }
}

int interpolationSearch(int arr[], int n, int x) {
    int low = 0, high = n - 1;

    while(low <= high && x >= arr[low] && x <= arr[high]) {
        if(low == high) {
            if(arr[low] == x) return low;
            return -1;
        }

        // Estimate the position
        int pos = low + ((double)(high - low) / (arr[high] - arr[low])) * (x - arr[low]);

        if(arr[pos] == x)
            return pos;
        else if(arr[pos] < x)
            low = pos + 1;
        else
            high = pos - 1;
    }

    return -1;  // Not found
}

void printArray(int arr[], int size) {
    for(int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int arr[] = {40, 10, 80, 30, 90, 20, 50, 70};
    int n = sizeof(arr) / sizeof(arr[0]);

    cout << "Original array: ";
    printArray(arr, n);

    bubbleSort(arr, n);

    cout << "Sorted array: ";
    printArray(arr, n);

    int target;
    cout << "Enter element to search: ";
    cin >> target;

    int index = interpolationSearch(arr, n, target);
    if(index != -1)
        cout << "Element found at index: " << index << endl;
    else
        cout << "Element not found in the array." << endl;

    return 0;
}
